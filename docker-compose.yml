
services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: weather-db
    environment:
      DB_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  # Express Backend
  server:
    build:
      context: ./server
    container_name: weather-api
    depends_on:
      - postgres
    environment:
      PGHOST: ${DB_HOST}
      PGPORT: ${DB_PORT}
      PGDATABASE: ${DB_NAME}
      PGUSER: ${DB_USER}
      PGPASSWORD: ${DB_PASSWORD}
      WEATHER_API_KEY: ${WEATHER_API_KEY}
    ports:
      - "${PORT}:${PORT}"
    restart: unless-stopped

      # Directus CMS
  directus:
    image: directus/directus:latest
    container_name: directus
    environment:
      DIRECTUS_DATABASE_CLIENT: postgres
      DIRECTUS_DATABASE_HOST: ${DB_HOST}
      DIRECTUS_DATABASE_PORT: ${DB_PORT}
      DIRECTUS_DATABASE_NAME: ${DB_NAME}
      DIRECTUS_DATABASE_USER: ${DB_USER}
      DIRECTUS_DATABASE_PASSWORD: ${DB_PASSWORD}
      # I run "cat /proc/sys/kernel/random/uuid" twice to generate
      DIRECTUS_SECRET: ${DIRECTUS_KEY} 
      DIRECTUS_EMAIL: ${DIRECTUS_EMAIL}
      DIRECTUS_PASSWORD: ${DIRECTUS_PASSWORD}
      DIRECTUS_PUBLIC_URL: http://localhost:${CMS_PORT}
      DB_FILENAME: "/directus/database/data.db"
      WEBSOCKETS_ENABLED: "true"
    ports:
      - "${CMS_PORT}:${CMS_PORT}"
    volumes:
      - directus_data:/directus/data
      # - ./database:/directus/database
      # - ./uploads:/directus/uploads
      # - ./extensions:/directus/extensions
    depends_on:
      - postgres
    restart: unless-stopped

  # Vue Frontend
  client:
    build:
      context: ./client
    container_name: weather-ui
    environment:
      - VUE_APP_API_URL=http://weather-api:${PORT}
    depends_on:
      - server
    ports:
      - "${UI_PORT}:${UI_PORT}"
    restart: unless-stopped

volumes:
  postgres_data:
  directus_data:
